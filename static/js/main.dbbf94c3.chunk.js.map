{"version":3,"sources":["components/Header.js","components/InputTodo.js","components/TodoItem.js","components/TodoList.js","components/TodoContainer.js","index.js"],"names":["Header","style","fontSize","marginBottom","Component","InputTodo","handleTitleSubmit","e","preventDefault","title","document","querySelector","value","props","handleSubmitProps","className","onSubmit","this","id","name","type","placeholder","TodoItem","todoProps","completed","checked","onChange","handleChangeProps","onClick","handleDeleteProps","fontStyle","color","opacity","textDecoration","TodoList","todos","map","todo","key","TodoContainer","state","toggleComplete","setState","deleteTodo","display","axios","delete","then","response","filter","addTodo","post","newTodo","data","uuid","v4","alert","componentDidMount","get","catch","err","console","log","componentDidUpdate","prevProps","prevState","Fragment","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dbbf94c3.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>Todo App (Class Components)</h1>\n                <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass InputTodo extends Component {\n    \n    handleTitleSubmit = (e) => {\n        e.preventDefault();\n        const title = document.querySelector(\"#title\").value;\n        this.props.handleSubmitProps(title);\n        document.querySelector(\"#title\").value = \"\"; // reset the title when form is submitted\n    }\n\n    render() {\n        return (\n            <form className=\"form-container\" onSubmit={this.handleTitleSubmit}>\n                <input className=\"input-text\" id=\"title\" name=\"title\" type=\"text\" placeholder=\"add todo ...\" />\n                <input className=\"input-submit\" type=\"submit\" />\n            </form>\n        )\n    }\n}\n\nexport default InputTodo;","import React, {Component} from 'react';\n\nclass TodoItem extends Component {\n    render () {\n        const {id, title, completed} = this.props.todoProps;\n        const completedStyle = {\n            fontStyle: \"italic\",\n            color: \"#d35e0f\",\n            opacity: 0.4,\n            textDecoration: \"line-through\",\n          }\n\n        return (\n            <li className=\"todo-item\">\n                <input type=\"checkbox\" checked={completed} onChange={() => this.props.handleChangeProps(id)}/>\n                <button onClick={() => this.props.handleDeleteProps(id)}>delete</button>\n                <span style={ completed ? completedStyle : null}>{title}</span>\n            </li>\n        )\n    }\n}\n\nexport default TodoItem;","import React, {Component} from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends Component {\n\n    render() {\n        let todos = this.props.todoProps;\n\n        return (\n            <ul>\n                {todos.map( todo => (\n                    <TodoItem key={todo.id} todoProps={todo} handleChangeProps={this.props.handleChangeProps} handleDeleteProps={this.props.handleDeleteProps} />\n                ))}\n            </ul>\n        )\n    }\n}\n\nexport default TodoList;","import React, {Component} from 'react';\nimport uuid from 'uuid';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport TodoList from './TodoList';\nimport axios from 'axios'\n\nclass TodoContainer extends Component {\n  state = {\n    todos: []\n  };\n\n  /*------------------------------------\n   * handle marking a todo item as \n   * completed or not completed\n   *------------------------------------*/\n  toggleComplete = (id) => {\n    //console.log(`Clicked on id: ${id}`);\n    this.setState({\n      todos: this.state.todos.map( todo => {\n        if  (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    })\n  }\n\n  /*------------------------------------\n   * delete an item\n   *------------------------------------*/\n  deleteTodo = (id) => {\n    //console.log(`Deleting id: ${id}`);\n    document.querySelector('#cover-spin').style.display = 'block';\n    axios.delete(\n      `https://jsonplaceholder.typicode.com/todos/${id}`\n    ).then( response => {\n      // with this fake DELETE request, the API sends bak\n      // an empty todo object in response.data; manually\n      // remove the todo with the matching id\n\n      //console.log(response);\n      this.setState({\n        todos: this.state.todos.filter( todo => {\n          return todo.id === id ? false : true;\n        })\n      })\n    }).then( () => {\n      document.querySelector('#cover-spin').style.display = 'none';\n    })\n  }\n\n  /*------------------------------------\n   * add an item\n   *------------------------------------*/\n  addTodo = (title) => {\n    //console.log('Submit new todo: ' + title);\n    if ( title ) {\n      document.querySelector('#cover-spin').style.display = 'block';\n      axios.post(\n        'https://jsonplaceholder.typicode.com/todos',\n        {\n          title: title,\n          completed: false\n        }\n      ).then( response => {\n        // with this fake PUT request, the API sends back\n        // the todo item in response.data; modify the `id`\n        // to be unique before adding to the `todos` state\n\n        //console.log(response);\n        let newTodo = response.data;\n        newTodo.id = uuid.v4();\n        this.setState({todos: [newTodo, ...this.state.todos]})\n      }).then( () => {\n        document.querySelector('#cover-spin').style.display = 'none';\n      });\n    }\n    else {\n      alert(\"Please enter a title\")\n    }\n  }\n\n  /*------------------------------------\n   * get list of todos from API on\n   * page loading\n   *------------------------------------*/\n  componentDidMount = () => {\n    axios.get(\n      'https://jsonplaceholder.typicode.com/todos?_limit=5'\n    ).then(response => {\n      //console.log(response);\n      this.setState({todos: response.data});\n    }).catch(err => console.log(\"ERROR retrievin data\", err));\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n  }\n\n\n  render() { \n\n    let {todos} = this.state;\n\n    return (\n      <React.Fragment> {/* React.Fragment allows a wrapping element that doesn't render any HTML */}\n        <div id=\"cover-spin\"></div>\n        <div className=\"container\">\n          <Header />\n          <InputTodo handleSubmitProps={this.addTodo} />\n          <TodoList todoProps={todos} handleChangeProps={this.toggleComplete} handleDeleteProps={this.deleteTodo} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoContainer from './components/TodoContainer';\nimport \"./App.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}