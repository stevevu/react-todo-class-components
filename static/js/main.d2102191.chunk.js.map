{"version":3,"sources":["components/Header.js","components/InputTodo.js","components/TodoItem.js","components/TodoList.js","components/TodoContainer.js","index.js"],"names":["Header","style","fontSize","marginBottom","Component","InputTodo","handleTitleSubmit","e","preventDefault","title","document","querySelector","value","props","handleSubmitProps","className","onSubmit","this","id","name","type","placeholder","TodoItem","todoProps","completed","checked","onChange","handleChangeProps","onClick","handleDeleteProps","fontStyle","color","opacity","textDecoration","TodoList","todos","map","todo","key","TodoContainer","state","uuid","v4","toggleComplete","setState","deleteTodo","filter","addTodo","newTodo","alert","ReactDOM","render","StrictMode","getElementById"],"mappings":"iRAaeA,E,uKATP,OACI,gCACI,wBAAIC,MAAO,CAAEC,SAAU,OAAQC,aAAc,SAA7C,+BACA,uBAAGF,MAAO,CAAEC,SAAU,SAAtB,0D,GALKE,aCmBNC,E,4MAjBXC,kBAAoB,SAACC,GACjBA,EAAEC,iBACF,IAAMC,EAAQC,SAASC,cAAc,UAAUC,MAC/C,EAAKC,MAAMC,kBAAkBL,GAC7BC,SAASC,cAAc,UAAUC,MAAQ,I,uDAIzC,OACI,0BAAMG,UAAU,iBAAiBC,SAAUC,KAAKX,mBAC5C,2BAAOS,UAAU,aAAaG,GAAG,QAAQC,KAAK,QAAQC,KAAK,OAAOC,YAAY,iBAC9E,2BAAON,UAAU,eAAeK,KAAK,gB,GAb7BhB,aCoBTkB,E,uKAnBA,IAAD,SACyBL,KAAKJ,MAAMU,UAAnCL,EADD,EACCA,GAAIT,EADL,EACKA,MAAOe,EADZ,EACYA,UAQlB,OACI,wBAAIT,UAAU,aACV,2BAAOK,KAAK,WAAWK,QAASD,EAAWE,SAAU,kBAAM,EAAKb,MAAMc,kBAAkBT,MACxF,4BAAQU,QAAS,kBAAM,EAAKf,MAAMgB,kBAAkBX,KAApD,UACA,0BAAMjB,MAAQuB,EAXC,CACnBM,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAO+B,MAAOxB,Q,GAd3CL,aCgBR8B,E,uKAbD,IAAD,OACDC,EAAQlB,KAAKJ,MAAMU,UAEvB,OACI,4BACKY,EAAMC,KAAK,SAAAC,GAAI,OACZ,kBAAC,EAAD,CAAUC,IAAKD,EAAKnB,GAAIK,UAAWc,EAAMV,kBAAmB,EAAKd,MAAMc,kBAAmBE,kBAAmB,EAAKhB,MAAMgB,4B,GARrHzB,aC6ERmC,E,4MAzEbC,MAAQ,CACNL,MAAO,CACL,CACEjB,GAAIuB,IAAKC,KACTjC,MAAO,gCACPe,WAAW,GAEb,CACEN,GAAIuB,IAAKC,KACTjC,MAAO,kCACPe,WAAW,GAEb,CACEN,GAAIuB,IAAKC,KACTjC,MAAO,wBACPe,WAAW,K,EAKjBmB,eAAiB,SAACzB,GAEhB,EAAK0B,SAAS,CACZT,MAAO,EAAKK,MAAML,MAAMC,KAAK,SAAAC,GAI3B,OAHKA,EAAKnB,KAAOA,IACfmB,EAAKb,WAAaa,EAAKb,WAElBa,Q,EAKbQ,WAAa,SAAC3B,GAGZ,EAAK0B,SACH,CAACT,MAAO,EAAKK,MAAML,MAAMW,QAAQ,SAAAT,GAC/B,OAAOA,EAAKnB,KAAOA,Q,EAKzB6B,QAAU,SAACtC,GAET,GAAKA,EAAO,CACV,IAAMuC,EAAU,CACd9B,GAAIuB,IAAKC,KACTjC,MAAOA,EACPe,WAAW,GAEb,EAAKoB,SAAS,CACZT,MAAM,GAAD,mBAAO,EAAKK,MAAML,OAAlB,CAAyBa,WAIhCC,MAAM,yB,uDAIA,IAEHd,EAASlB,KAAKuB,MAAdL,MAEL,OACE,yBAAKpB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWD,kBAAmBG,KAAK8B,UACnC,kBAAC,EAAD,CAAUxB,UAAWY,EAAOR,kBAAmBV,KAAK0B,eAAgBd,kBAAmBZ,KAAK4B,kB,GApExEzC,a,MCA5B8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1C,SAAS2C,eAAe,W","file":"static/js/main.d2102191.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>Todo App (Class Components)</h1>\n                <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass InputTodo extends Component {\n    \n    handleTitleSubmit = (e) => {\n        e.preventDefault();\n        const title = document.querySelector(\"#title\").value;\n        this.props.handleSubmitProps(title);\n        document.querySelector(\"#title\").value = \"\"; // reset the title when form is submitted\n    }\n\n    render() {\n        return (\n            <form className=\"form-container\" onSubmit={this.handleTitleSubmit}>\n                <input className=\"input-text\" id=\"title\" name=\"title\" type=\"text\" placeholder=\"add todo ...\" />\n                <input className=\"input-submit\" type=\"submit\" />\n            </form>\n        )\n    }\n}\n\nexport default InputTodo;","import React, {Component} from 'react';\n\nclass TodoItem extends Component {\n    render () {\n        const {id, title, completed} = this.props.todoProps;\n        const completedStyle = {\n            fontStyle: \"italic\",\n            color: \"#d35e0f\",\n            opacity: 0.4,\n            textDecoration: \"line-through\",\n          }\n\n        return (\n            <li className=\"todo-item\">\n                <input type=\"checkbox\" checked={completed} onChange={() => this.props.handleChangeProps(id)}/>\n                <button onClick={() => this.props.handleDeleteProps(id)}>delete</button>\n                <span style={ completed ? completedStyle : null}>{title}</span>\n            </li>\n        )\n    }\n}\n\nexport default TodoItem;","import React, {Component} from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends Component {\n\n    render() {\n        let todos = this.props.todoProps;\n\n        return (\n            <ul>\n                {todos.map( todo => (\n                    <TodoItem key={todo.id} todoProps={todo} handleChangeProps={this.props.handleChangeProps} handleDeleteProps={this.props.handleDeleteProps} />\n                ))}\n            </ul>\n        )\n    }\n}\n\nexport default TodoList;","import React, {Component} from 'react';\nimport uuid from 'uuid';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport TodoList from './TodoList';\n\nclass TodoContainer extends Component {\n  state = {\n    todos: [\n      {\n        id: uuid.v4(),\n        title: \"Setup development environment\",\n        completed: true\n      },\n      {\n        id: uuid.v4(),\n        title: \"Develop website and add content\",\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: \"Deploy to live server\",\n        completed: false\n      }\n    ]\n  };\n\n  toggleComplete = (id) => {\n    //console.log(`Clicked on id: ${id}`);\n    this.setState({\n      todos: this.state.todos.map( todo => {\n        if  (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    })\n  }\n\n  deleteTodo = (id) => {\n    //console.log(`Deleting id: ${id}`);\n    //this.setState({todos: []})\n    this.setState(\n      {todos: this.state.todos.filter( todo => {\n        return todo.id === id ? false : true;\n      })\n    })\n  }\n\n  addTodo = (title) => {\n    //console.log('Submit new todo: ' + title);\n    if ( title) {\n      const newTodo = {\n        id: uuid.v4(),\n        title: title,\n        completed: false\n      }\n      this.setState({\n        todos: [ ...this.state.todos, newTodo]\n      })\n    }\n    else {\n      alert(\"Please enter a title\")\n    }\n  }\n\n  render() { \n\n    let {todos} = this.state;\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <InputTodo handleSubmitProps={this.addTodo} />\n        <TodoList todoProps={todos} handleChangeProps={this.toggleComplete} handleDeleteProps={this.deleteTodo} />\n      </div>\n    );\n  }\n}\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoContainer from './components/TodoContainer';\nimport \"./App.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}